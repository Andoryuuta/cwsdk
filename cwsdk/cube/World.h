#pragma once

#include "Region.h"
#include "Creature.h"
#include "../msvc_bincompat.h"
#include "../non_cube.h"

namespace cube {
	struct World
	{
		int vftable;
		int EntitesMap;
		int field_8;
		int field_C;
		int field_10;
		int field_14;
		int field_18;
		int field_1C;
		int field_20;
		int field_24;
		int field_28;
		int field_2C;
		int field_30;
		int field_34;
		int field_38;
		int field_3C;
		int field_40;
		int field_44;
		int field_48;
		int field_4C;
		int field_50;
		int field_54;
		int field_58;
		int field_5C;
		int field_60;
		int field_64;
		int field_68;
		int field_6C;
		int field_70;
		int field_74;
		int field_78;
		int field_7C;
		int field_80;
		int field_84;
		int field_88;
		int field_8C;
		int field_90;
		MSVCBinCompat::string world_name;
		int field_AC;
		int field_B0;
		int field_B4;
		Creature *local_player;
		struct
		{
			Region *main_regions[1048576];
			Region *unk_regions[1048576];
		} world_region_data;
		int field_8000BC;
		int critical_section;
		int field_8000C4;
		int field_8000C8;
		int field_8000CC;
		int field_8000D0;
		int field_8000D4;
		int field_8000D8;
		int field_8000DC;
		int field_8000E0;
		int field_8000E4;
		int field_8000E8;
		int field_8000EC;
		int field_8000F0;
		int field_8000F4;
		int field_8000F8;
		int field_8000FC;
		int field_800100;
		int EntityNames;
		int field_800108;
		int PlaceableObjectNames;
		int field_800110;
		int Skillnames;
		int field_800118;
		int AbilityNames;
		int field_800120;
		int GeneralPlaceNameBinTreeMap;
		int field_800128;
		int CityQuarterNamesBinTreeMap;
		int field_800130;
		int ItemNames;
		int field_800138;
		int OtherEntityNames;
		int field_800140;
		int OtherObjectNames;
		int field_800148;
		int OtherItemNames;
		int field_800150;
		int UnkMap;
		int field_800158;
		int Time;
		int field_800160;
		int field_800164;
		int other_stuff;
		int field_80016C;
		int field_800170;
		int field_800174;
		int field_800178;
		int field_80017C;
		int field_800180;
		int field_800184;
		int field_800188;
		int field_80018C;
		int field_800190;
		int field_800194;
		int field_800198;
		int field_80019C;
		int field_8001A0;
		int field_8001A4;
		int field_8001A8;
		int field_8001AC;
		int field_8001B0;
		int field_8001B4;
		int field_8001B8;
		int field_8001BC;
		int field_8001C0;
		int field_8001C4;
		int field_8001C8;
		int field_8001CC;
		int field_8001D0;
		int field_8001D4;
		int field_8001D8;
		int field_8001DC;
		int field_8001E0;
		int field_8001E4;
		int field_8001E8;
		int field_8001EC;
		int field_8001F0;
		int field_8001F4;
		int field_8001F8;
		int field_8001FC;
		int field_800200;
		int field_800204;
		int field_800208;
		int field_80020C;
		int field_800210;
		int field_800214;
		int field_800218;
		int field_80021C;
		int field_800220;
		int field_800224;
		int field_800228;
		int field_80022C;
		int field_800230;
		int field_800234;
		int field_800238;
		int field_80023C;
		int field_800240;
		int field_800244;
		int field_800248;
		int field_80024C;
		int field_800250;
		int field_800254;
		int field_800258;
		int field_80025C;
		int field_800260;
		int field_800264;
		int field_800268;
		int field_80026C;
		int field_800270;
		int field_800274;
		int field_800278;
		int field_80027C;
		int field_800280;
		int field_800284;
		int field_800288;
		int field_80028C;
		int field_800290;
		int field_800294;
		int field_800298;

		void Lock();
		void Unlock();
		char SetBlock(int x, int y, int z, BlockColor* color_type, Zone* zone);
		BlockColor* GetBlock(int x, int y, int z, Zone* zone);
	};
};